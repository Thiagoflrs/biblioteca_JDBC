package application;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import db.DB;

public class Program {

	public static void main(String[] args) {
		try {
			inserirAluno("Manoel Lucas", "2425123", "1995/04/22", "Engenharia da Computação");
			lerLivros();
		} catch (ParseException e) {
			System.out.println("Erro ao converter a data: " + e.getMessage());
		}
	}
	
	/*
	 * Atualizar dados
	 */
	public static void atualizarEstoqueLivro() {
		Connection conn = null;
		PreparedStatement st = null;
		try {
			conn = DB.getConnection();
			
			st = conn.prepareStatement(""
					+ "UPDATE livros "
					+ "SET quantidade_estoque = ? "
					+ "WHERE "
					+ "(id_livro = ?)");
			
			st.setInt(6, 10);
			
			int rowsAffected = st.executeUpdate();
			
			System.out.println("Pronto! Linhas afetadas: " + rowsAffected);
		}
		catch (SQLException e ) {
			e.printStackTrace();
		}
		finally {
			DB.closeStatement(st);
		}
	}

	/* 
	 * Inserção Banco de dados 
	 */
	public static void inserirAluno(String nome, String matricula, String dataNascimento, String curso) throws ParseException {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
		Connection conn = null;
		PreparedStatement st = null;

		try {
			conn = DB.getConnection(); /*Conecta ao BD*/

			st = conn.prepareStatement(
				"INSERT INTO alunos " +
				"(nome_aluno, matricula, data_nascimento, curso) " +
				"VALUES (?, ?, ?, ?)", /*Depois colocar o valor*/
				Statement.RETURN_GENERATED_KEYS
			); /*Comando maior SQL*/

			st.setString(1, nome);
			st.setString(2, matricula);
			st.setDate(3, new java.sql.Date(sdf.parse(dataNascimento).getTime()));
			st.setString(4, curso);

			int rowsAffected = st.executeUpdate(); /*Quantas linhas alteradas*/

			if (rowsAffected > 0) {
				ResultSet rs = st.getGeneratedKeys();
				while (rs.next()) {
					int id = rs.getInt(1);
					System.out.println("Pronto! Id = " + id);
				}
			}
			else {
				System.out.println("Nenhuma linha alterada!");
			}
		}
		catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			DB.closeStatement(st);
		}
	}

	/* 
	 * Código para Recuperar Dados (LER)
	 */
	public static void lerLivros() {
		// Conexão e consulta ao banco de dados
		Connection conn = null;
		Statement st = null; // Prepara consulta SQL
		ResultSet rs = null; // Retorna o resultado

		try {
			conn = DB.getConnection(); // Conecta ao BD

			st = conn.createStatement();

			rs = st.executeQuery("SELECT * FROM livros"); // Inserir o comando SQL

			while (rs.next()) { // Enquanto existir o próximo
				System.out.println(rs.getInt("Id_livro") + ", " + rs.getString("titulo"));
			}
		}
		catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			DB.closeResultSet(rs);
			DB.closeStatement(st);
			DB.closeConnection();
		}
	}
}
