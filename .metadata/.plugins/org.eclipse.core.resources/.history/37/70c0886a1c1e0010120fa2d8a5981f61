package application;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import db.DB;

public class Program {

	public static void main(String[] args) {
		
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
		Connection conn = null;
		PreparedStatement st = null;
		try {
			conn = DB.getConnection(); /*Conecta ao BD*/
			
			st = conn.prepareStatement(
					"INSERT INTO alunos "
					+ "(nome_aluno, matricula, data_nascimento, curso)"
					+ "VALUES"
					+ "(?, ?, ?, ?)", /*Depois colocar o valor*/
					Statement.RETURN_GENERATED_KEYS
					); /*Comando maior SQL*/
					
			st.setString(1, "Rubens Viana");
			st.setString(2, "2425678");
			st.setDate(3, new java.sql.Date(sdf.parse("1995/04/22").getTime()));
			st.setString(4, "Engenharia da Computação");
			
			int rowsAffected = st.executeUpdate(); /*Quantas linhas alteradas*/
			
			if (rowsAffected > 0) {
				ResultSet rs = st.getGeneratedKeys();
			}
			else {
				System.out.println("Nenhuma linha alterada!");
			}
		}
		catch (SQLException e) {
			e.printStackTrace();
		}
		catch (ParseException e) {
			e.printStackTrace();
		}
		finally {
			DB.closeStatement(st);
			DB.closeConnection();
		}
	}
}

/* Código para Recuperar Dados (LER)
 * 
 * 
// Conexão e consulta ao banco de dados
Connection conn = null;
Statement st = null; // Prepara consulta SQL
ResultSet rs = null; // Retorna o resultado

try {
	conn = DB.getConnection(); // Conecta ao BD

	st = conn.createStatement();

	rs = st.executeQuery("select * from livros"); // Inserir o comando SQL

	while (rs.next()) { // Enquanto existir o próximo
		System.out.println(rs.getInt("Id_livro") + ", " + rs.getString("titulo"));
	}
}
catch (SQLException e) {
	e.printStackTrace();
}
finally {
	DB.closeResultSet(rs);
	DB.closeStatement(st);
	DB.closeConnection();
}
*/
