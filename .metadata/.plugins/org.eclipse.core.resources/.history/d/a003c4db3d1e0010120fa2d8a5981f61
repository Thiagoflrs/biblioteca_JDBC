package application;

import java.util.List;

import dao.AlunoDAO;
import dao.LivroDAO;
import model.Aluno;
import model.Livro;

public class Program {
    public static void main(String[] args) {
        // CRUD para Alunos
        System.out.println("==== CRUD ALUNO ====");
        System.out.println();
        Aluno novoAluno = new Aluno(null, "Carlos Silva", "202312346", LocalDate.of(2000, 5, 10), "Engenharia");
        AlunoDAO.inserir(novoAluno);
        List<Aluno> alunos = AlunoDAO.listarAlunos();  // Alterado para listarAlunos
        alunos.forEach(System.out::println);

        if (!alunos.isEmpty()) {
            Aluno alunoAtualizar = alunos.get(0);
            alunoAtualizar.setCurso("Sistemas de Informação");
            AlunoDAO.atualizarAluno(alunoAtualizar);  // Alterado para atualizarAluno
        }

        if (!alunos.isEmpty()) {
            int idDeletar = alunos.get(alunos.size() - 1).getId();
            AlunoDAO.deletarPorId(idDeletar);
        }

        // CRUD para Livros
        System.out.println("\n==== CRUD LIVRO ====");
        Livro novoLivro = new Livro(null, "Clean Code", "Robert C. Martin", 2008, 10);  // Ano de publicação agora como inteiro
        LivroDAO.inserir(novoLivro);

        // Listando livros após a inserção
        List<Livro> livros = LivroDAO.listarLivros();
        livros.forEach(System.out::println);

        // Atualizando estoque do livro
        if (!livros.isEmpty()) {
            Livro livroAtualizar = livros.get(0);
            LivroDAO.atualizarEstoque(livroAtualizar.getId(), 5); // Atualiza o estoque do livro
        }
    }
}
